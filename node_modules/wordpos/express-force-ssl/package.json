{
  "_args": [
    [
      {
        "raw": "express-force-ssl",
        "scope": null,
        "escapedName": "express-force-ssl",
        "name": "express-force-ssl",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/lassanakonate/Desktop/robothelp0"
    ]
  ],
  "_from": "express-force-ssl@latest",
  "_id": "express-force-ssl@0.3.2",
  "_inCache": true,
  "_location": "/express-force-ssl",
  "_nodeVersion": "5.7.1",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/express-force-ssl-0.3.2.tgz_1463023586044_0.4297477814834565"
  },
  "_npmUser": {
    "name": "complexcarb",
    "email": "battlejj@gmail.com"
  },
  "_npmVersion": "3.8.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "express-force-ssl",
    "scope": null,
    "escapedName": "express-force-ssl",
    "name": "express-force-ssl",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/express-force-ssl/-/express-force-ssl-0.3.2.tgz",
  "_shasum": "01b2b498ae6fd2e41152b22b57a3e173773af67e",
  "_shrinkwrap": null,
  "_spec": "express-force-ssl",
  "_where": "/Users/lassanakonate/Desktop/robothelp0",
  "author": {
    "name": "Jeremy Battle",
    "email": "@complexcarb",
    "url": "http://jeremybattle.com"
  },
  "bugs": {
    "url": "http://github.com/battlejj/express-force-ssl/issues"
  },
  "contributors": [
    {
      "name": "Jeremy Battle",
      "email": "battlejj@gmail.com"
    }
  ],
  "dependencies": {
    "lodash.assign": "^3.2.0"
  },
  "description": "Force SSL on particular/all pages in Express",
  "devDependencies": {
    "body-parser": "^1.9.0",
    "chai": "^1.9.1",
    "express": "^4.9.4",
    "mocha": "^1.21.4",
    "request": "^2.44.0"
  },
  "directories": {},
  "dist": {
    "shasum": "01b2b498ae6fd2e41152b22b57a3e173773af67e",
    "tarball": "https://registry.npmjs.org/express-force-ssl/-/express-force-ssl-0.3.2.tgz"
  },
  "engines": {
    "node": ">=0.2.2"
  },
  "gitHead": "ce570b8f0667655a124e0ce6bd5622f2cf1b6977",
  "homepage": "http://github.com/battlejj/express-force-ssl",
  "keywords": [
    "ssl",
    "tls",
    "https",
    "express"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/battlejj/express-force-ssl/raw/master/LICENSE"
    }
  ],
  "main": "index",
  "maintainers": [
    {
      "name": "complexcarb",
      "email": "battlejj@gmail.com"
    }
  ],
  "name": "express-force-ssl",
  "optionalDependencies": {},
  "readme": "express-force-ssl\n=================\nExtremely simple middleware for requiring some or all pages\nto be visited over SSL.\n\n\nInstallation\n------------\n````\n$ npm install express-force-ssl\n````\n\nConfiguration\n=============\nAs of v0.3.0 there are some configuration options\n-------------------------------------------------\n\n**NEW Settings Option**\n```javascript\napp.set('forceSSLOptions', {\n  enable301Redirects: true,\n  trustXFPHeader: false,\n  httpsPort: 443,\n  sslRequiredMessage: 'SSL Required.'\n});\n```\n\n\n**enable301Redirects** - Defaults to ***true*** - the normal behavior is to 301 redirect GET requests to the https version of a\nwebsite. Changing this value to ***false*** will cause even GET requests to 403 SSL Required errors.\n\n**trustXFPHeader** - Defaults to ***false*** - this behavior is NEW and will be default NOT TRUST X-Forwarded-Proto which\ncould allow a client to spoof whether or not they were on HTTPS or not. This can be changed to ***true*** if you are\nbehind a proxy where you trust the X-Forwarded-Proto header.\n\n**httpsPort** - Previous this value was set with app.set('httpsPort', :portNumber) which is now deprecated. This value\nshould now be set in the forceSSLOptions setting.\n\n**sslRequiredMessage** - Defaults to ***SSL Required.*** This can be useful if you want to localize your error messages.\n\nPer-Route SSL Settings are now possible\n---------------------------------------\nSettings in your forceSSLOptions configuration will act as default settings for your app. However, these values can\nbe overridden by setting *res.locals* values before the the express-force-ssl middleware is run. For example:\n\n```javascript\napp.set('forceSSLOptions', {\n  enable301Redirects: false\n});\n\napp.get('/', forceSSL, function (req, res) {\n  //this route will 403 if accessed via HTTP\n  return res.send('HTTPS only.');\n});\n\nfunction allow301 (req, res, next) {\n  res.locals.forceSSLOptions = {\n    enable301Redirects: true\n  };\n  next();\n}\n\napp.get('/allow', allow301, forceSSL, function (req, res) {\n  //this route will NOT 403 if accessed via HTTP\n  return res.send('HTTP or HTTPS');\n});\n\n```\n\n\n\nExamples\n========\nForce SSL on all pages\n----------------------\n```javascript\nvar express = require('express');\nvar forceSSL = require('express-force-ssl');\nvar fs = require('fs');\nvar http = require('http');\nvar https = require('https');\n\nvar ssl_options = {\n  key: fs.readFileSync('./keys/private.key'),\n  cert: fs.readFileSync('./keys/cert.crt'),\n  ca: fs.readFileSync('./keys/intermediate.crt')\n};\n\nvar app = express();\nvar server = http.createServer(app);\nvar secureServer = https.createServer(ssl_options, app);\n\napp.use(express.bodyParser());\napp.use(forceSSL);\napp.use(app.router);\n\nsecureServer.listen(443)\nserver.listen(80)\n\n```\n\nOnly certain pages SSL\n----------------------\n```javascript\nvar express = require('express');\nvar forceSSL = require('express-force-ssl');\nvar fs = require('fs');\nvar http = require('http');\nvar https = require('https');\n\nvar ssl_options = {\n  key: fs.readFileSync('./keys/private.key')\n  cert: fs.readFileSync('./keys/cert.crt')\n  ca: fs.readFileSync('./keys/intermediate.crt')\n};\n\nvar app = express();\n\nvar server = http.createServer(app);\nvar secureServer = https.createServer(ssl_options, app);\n\napp.use(express.bodyParser());\napp.use(app.router);\n\napp.get('/', somePublicFunction);\napp.get('/user/:name', somePublicFunction);\napp.get('/login', forceSSL, someSecureFunction);\napp.get('/logout', forceSSL, someSecureFunction);\n\nsecureServer.listen(443)\nserver.listen(80)\n```\n\nCustom Server Port Support\n--------------------------\nIf your server isn't listening on 80/443 respectively, you can change this pretty simply.\n\n```javascript\n\nvar app = express();\napp.set('forceSSLOptions', {\n  httpsPort: 8443\n});\n\nvar server = http.createServer(app);\nvar secureServer = https.createServer(ssl_options, app);\n\n...\n\nsecureServer.listen(443)\nserver.listen(80)\n\n```\n\nTest\n----\n```\nnpm test\n```\n\nChange Log\n==========\n**v0.3.2** - Updated README to remove typo. Thanks @gswalden\n\n**v0.3.1** - Updated README to remove deprecated usage and fix some typos. Thanks @Alfredo-Delgado and @glennr\n\n**v0.3.0** - Added additional configuration options, ability to add per route configuration options\n\n**v0.2.13** - Bug Fix, thanks @tatepostnikoff\n\n**v0.2.12** - Bug Fix\n\n**v0.2.11** - Updated README to fix usage example typo and formatting fixes\n\n**v0.2.10** - Updated README for npmjs.com markdown changes\n\n**v0.2.9** - More modular tests.\n\n**v0.2.8** - Now sends 403 SSL Required error when HTTP method is anything but GET.\nThis will prevent a POST/PUT etc with data that will end up being lost in a redirect.\n\n**v0.2.7** - Additional Test cases. Added example server.\n\n**v0.2.6** - Added Tests\n\n**v0.2.5** - Bug Fix\n\n**v0.2.4** - Now also checking X-Forwarded-Proto header to determine SSL connection\nCourtesy of @ronco\n\n**v0.2.3** - Update README\n\n**v0.2.2** - Redirect now gives a 301 permanent redirection HTTP Status Code\nCourtesy of @tixz\n\n**v0.2.0** - Added support for ports other than 80/443 for non-secure/secure ports.\nFor example, if you host your non-ssl site on port 8080 and your secure site on 8443, version 0.1.x did not support it.\nNow, out of the box your non-ssl site port will be recognized, and to specify a port other than 443 for your ssl port\nyou just have to add a setting in your express config like so:\n**Update, this method of setting httpsPort is deprecated as of v 0.3.0**\n\n````javascript\napp.set('httpsPort', 8443);\n````\nand the plugin will check for it and use it. Defaults to 443 of course.\n\n**v0.1.1** - Bug fix\nCourtesy of @timshadel\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/battlejj/express-force-ssl.git"
  },
  "scripts": {
    "test": "mocha test"
  },
  "version": "0.3.2"
}
